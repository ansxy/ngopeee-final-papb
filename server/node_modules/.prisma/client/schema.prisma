// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String          @id @default(cuid())
  name           String
  About          String          @default("null")
  Location       String          @default("null")
  Email          String
  Phone          String          @default("null")
  Education      String          @default("null")
  created_at     DateTime        @default(now())
  Field          String          @default("null")
  Employee       String          @default("null")
  Photo          String          @default("null")
  PhotoLandscape String          @default("null")
  Password       String
  Status         Status          @default(User)
  AppliedVacany  AppliedVacany[]
  Vacany         Vacany[]
}

enum Status {
  User
  Company
}

model Vacany {
  id            String          @id @default(cuid())
  VacanyName    String
  DescVacany    String
  ReqVacany     String
  AppliedVacany AppliedVacany[]
  createdAt     DateTime        @default(now()) @map(name: "created_at")
  LstTimeToReg  String          @default("null")
  company       User?           @relation(fields: [companyId], references: [id])
  companyId     String?
}

model AppliedVacany {
  id       String  @id @default(cuid())
  Status   String
  vacany   Vacany? @relation(fields: [vacanyId], references: [id])
  vacanyId String
  user     User?   @relation(fields: [userId], references: [id])
  userId   String
}

model tbl_User {
  id               String                  @id @default(cuid())
  Username         String
  Password         String
  noHp             String
  email            String                  @unique
  Role             Role                    @default(COSTUMER)
  tbl_detailOutlet tbl_detailOutlet[]
  tbl_transaction  tbl_detailTransaction[]
  tbl_Transaction  tbl_Transaction[]
}

enum Role {
  ADMIN
  COSTUMER
}

model tbl_Menu {
  id              String            @id @default(cuid())
  nameMenu        String
  priceMenu       Int
  descMenu        String
  tbl_Transaction tbl_Transaction[]
}

model tbl_detailTransaction {
  id              String           @id @default(cuid())
  tbl_Transaction tbl_Transaction? @relation(fields: [idTransaction], references: [id])
  idTransaction   String
  total           Int
  tbl_User        tbl_User?        @relation(fields: [tbl_UserId], references: [id])
  tbl_UserId      String?
}

model tbl_detailOutlet {
  id              String            @id @default(cuid())
  tbl_user        tbl_User?         @relation(fields: [idUser], references: [id])
  idUser          String
  alamatOutlet    String
  Status          String
  tbl_Transaction tbl_Transaction[]
}

model tbl_Transaction {
  id               String            @id @default(cuid())
  tbl_user         tbl_User?         @relation(fields: [idUser], references: [id])
  idUser           String
  tbl_detailOutlet tbl_detailOutlet? @relation(fields: [idOutlet], references: [id])
  idOutlet         String
  tbl_Menu         tbl_Menu?         @relation(fields: [idMenu], references: [id])
  idMenu           String
  status           String
  payment          String
  time             DateTime @default(now())
  promo            String

  tbl_detailTransaction tbl_detailTransaction[]
}

model tbl_log {
  id         String   @id @default(cuid())
  jenisLog   String
  created_at DateTime 
  idUser     String
}

//TODO : Make It more Simple And No Redundancy
